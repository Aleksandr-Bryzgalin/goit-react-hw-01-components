{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/Statistics.js","components/Friends/FriendListItem.js","components/Friends/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","Statistics","title","map","id","label","percentage","FriendListItem","isOnline","width","FriendList","friends","kay","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1713ac07.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './Profile.css';\r\n\r\nfunction Profile({ name, tag, location, avatar, stats }) {\r\n    return (\r\n        <div className=\"Profile\">\r\n            <div className=\"Profile__description\">\r\n                <img \r\n                    src={avatar}\r\n                    alt=\"Аватар пользователя\"\r\n                    className=\"Profile__avatar\"\r\n                />\r\n                <p className=\"Profile__name\">{name}</p>\r\n                <p className=\"Profile__tag\">@{tag}</p>\r\n                <p className=\"Profile__location\">{location}</p>\r\n            </div>\r\n\r\n            <ul className=\"Profile__stats\">\r\n                <li className=\"Profile__stats-item\">\r\n                    <span className=\"Profile__label\">Followers</span>\r\n                    <span className=\"Profile__quantity\">{stats.followers}</span>\r\n                </li>\r\n                <li className=\"Profile__stats-item\">\r\n                    <span className=\"Profile__label\">Views</span>\r\n                    <span className=\"Profile__quantity\">{stats.views}</span>\r\n                </li>\r\n                <li className=\"Profile__stats-item\">\r\n                    <span className=\"Profile__label\">Likes</span>\r\n                    <span className=\"Profile__quantity\">{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n};\r\n\r\nexport {Profile}","import PropTypes from 'prop-types';\r\nimport './Statistics.css'\r\n\r\nfunction Statistics({ title, stats }) {\r\n  return (\r\n    <section className=\"Statistics\">\r\n      {title && <h2 className=\"Statistics__title\">{title}</h2>}\r\n\r\n      <ul className=\"Statistics__stat-list\">\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <li className=\"Statistics__stat-item\" key={id}>\r\n            <span className=\"Statistics__stat-item-label\">{label}</span>\r\n            <span className=\"Statistics__stat-item-percentage\">{percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport { Statistics };\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction FriendListItem({ avatar, name, isOnline }) {\r\n  return (\r\n    <li className=\"FriendList__item\">\r\n      {isOnline ? (\r\n        <span className=\"FriendListItem-statusOnline\">{isOnline}</span>\r\n      ) : (\r\n        <span className=\"FriendListItem-statusOfline\">{isOnline}</span>\r\n      )}\r\n      <span className=\"FriendList__item-status\">{isOnline}</span>\r\n      <img\r\n        className=\"FriendList__item-avatar\"\r\n        src={avatar}\r\n        alt={name}\r\n        width=\"48\"\r\n      />\r\n      <p className=\"FriendList__item-name\">{name}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport { FriendListItem };\r\n","import PropTypes from 'prop-types';\r\nimport './FriendList.css'\r\nimport { FriendListItem } from  './FriendListItem'\r\n\r\nfunction FriendList({ friends, id }) {\r\n  return (\r\n    <ul className=\"FriendList\" kay={id}>\r\n      {friends.map(({ avatar, name, isOnline, id }) => (\r\n          <FriendListItem  avatar={avatar} name={name} isOnline={isOnline} key={id}/>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport { FriendList };\r\n","import PropTypes from 'prop-types';\r\nimport './TransactionHistory.css'\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <table className=\"TransactionHistory\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport { TransactionHistory };\r\n","\r\nimport { Profile } from './components/Profile/Profile';\r\nimport user from './data/user.json'\r\n\r\nimport { Statistics } from './components/Statistics/Statistics';\r\nimport statisticalData from './data/statistical-data.json';\r\n\r\nimport { FriendList } from './components/Friends/FriendList';\r\nimport friends from './data/friends.json'\r\n\r\nimport { TransactionHistory } from './components/TransactionHistory/TransactionHistory';\r\nimport transactions from './data/transactions.json'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <Profile\r\n          name={user.name}\r\n          tag={user.tag}\r\n          location={user.location}\r\n          avatar={user.avatar}\r\n          stats={user.stats}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      </div>\r\n      <div>\r\n        <Statistics stats={statisticalData}/>\r\n      </div>\r\n\r\n      <FriendList friends={friends} />\r\n\r\n      <TransactionHistory items={transactions} />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}